<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

    <modelVersion>4.0.0</modelVersion>

    <groupId>net.caseydunham</groupId>
    <artifactId>stripes-quickstart</artifactId>
    <packaging>war</packaging>
    <version>1.0-SNAPSHOT</version>

    <name>stripes-quickstart</name>
    <description>
        A starting point for writing a webapp with the Stripes Framework
    </description>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
        <selenium.version>2.53.0</selenium.version>
        <bootstrap.version>3.3.6</bootstrap.version>
        <simplemde.version>1.9.0</simplemde.version>
        <jquery.version>1.11.1</jquery.version> <!-- Manually updated :( -->
        <overwrite.binaries>false</overwrite.binaries>
        <browser>firefox</browser>
        <threads>1</threads>
        <remote>false</remote>
        <seleniumGridURL/>
        <platform/>
        <browserVersion/>
    </properties>

    <build>
        <resources>
            <resource>
                <!-- Filter jsversions.properties so that we can
                     access our dependency versions in the app -->
                <directory>src/main/resources</directory>
                <filtering>true</filtering>
                <includes>
                    <include>jsversions.properties</include>
                </includes>
            </resource>
            <resource>
                <!-- We don't want to filter any other files
                     besides jsversions.properties -->
                <directory>src/main/resources</directory>
                <filtering>false</filtering>
                <excludes>
                    <exclude>jsversions.properties</exclude>
                </excludes>
            </resource>
        </resources>

        <plugins>
            <plugin>
                <!-- Tell Maven to use Java 8 for our source code -->
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.5.1</version>
                <configuration>
                    <source>1.8</source>
                    <target>1.8</target>
                </configuration>
            </plugin>
            <plugin>
                <!-- Compile our Scala code. -->
                <groupId>org.scala-tools</groupId>
                <artifactId>maven-scala-plugin</artifactId>
                <version>2.15.2</version>
                <executions>
                    <execution>
                        <goals>
                            <goal>testCompile</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <!--
                    Use "mvn jetty:run" to start Jetty and deploy app.
                    It will be available at http://localhost:8080/
                -->
                <groupId>org.eclipse.jetty</groupId>
                <artifactId>jetty-maven-plugin</artifactId>
                <version>9.4.7.v20170914</version>
                <executions>
                    <execution>
                        <id>start-jetty</id>
                        <phase>pre-integration-test</phase>
                        <goals>
                            <goal>deploy-war</goal>
                        </goals>
                        <configuration>
                            <scanIntervalSeconds>2</scanIntervalSeconds>
                            <daemon>true</daemon>
                            <stopKey>sqsit</stopKey>
                            <stopPort>8081</stopPort>
                            <dumpOnStart>true</dumpOnStart>
                        </configuration>
                    </execution>
                    <execution>
                        <id>stop-jetty</id>
                        <phase>post-integration-test</phase>
                        <goals>
                            <goal>stop</goal>
                        </goals>
                        <configuration>
                            <stopKey>sqsit</stopKey>
                            <stopPort>8081</stopPort>
                            <stopWait>5</stopWait>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <!-- Disable Surefire, we're going to use Scalatest, see below -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>2.7</version>
                <configuration>
                    <skipTests>true</skipTests>
                </configuration>
            </plugin>
            <!-- Enable Scalatest -->
            <plugin>
                <groupId>org.scalatest</groupId>
                <artifactId>scalatest-maven-plugin</artifactId>
                <version>1.0</version>
                <configuration>
                    <suffixes>Spec</suffixes>
                    <reportsDirectory>${project.build.directory}/surefire-reports</reportsDirectory>
                </configuration>
                <executions>
                    <execution>
                        <id>test</id>
                        <phase>test</phase>
                        <goals>
                            <goal>test</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>integration-test</id>
                        <phase>integration-test</phase>
                        <goals>
                            <goal>test</goal>
                        </goals>
                        <configuration>
                            <suffixes>IT</suffixes>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>

    <dependencies>
        <dependency>
            <groupId>org.apache.logging.log4j</groupId>
            <artifactId>log4j-api</artifactId>
            <version>2.17.1</version>
        </dependency>
        <dependency>
            <groupId>org.apache.logging.log4j</groupId>
            <artifactId>log4j-core</artifactId>
            <version>2.17.1</version>
        </dependency>
        <dependency>
            <groupId>org.apache.logging.log4j</groupId>
            <artifactId>log4j-slf4j-impl</artifactId>
            <version>2.8.1</version>
        </dependency>
        <dependency>
            <groupId>org.apache.logging.log4j</groupId>
            <artifactId>log4j-1.2-api</artifactId>
            <version>2.8.1</version>
        </dependency>
        <dependency>
            <!-- This is the Stripes Framework -->
            <groupId>net.sourceforge.stripes</groupId>
            <artifactId>stripes</artifactId>
            <version>1.6.0</version>
        </dependency>
        <dependency>
            <!-- Multi-purpose utility library -->
            <groupId>com.google.guava</groupId>
            <artifactId>guava</artifactId>
            <version>19.0</version>
        </dependency>
        <dependency>
            <!-- The javax.servlet package -->
            <groupId>javax.servlet</groupId>
            <artifactId>javax.servlet-api</artifactId>
            <version>3.1.0</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <!-- Hibernate, the defacto ORM -->
            <groupId>org.hibernate</groupId>
            <artifactId>hibernate-core</artifactId>
            <version>5.4.24.Final</version>
        </dependency>
        <dependency>
            <!-- Hikari connection pooling library for Hibernate -->
            <groupId>org.hibernate</groupId>
            <artifactId>hibernate-hikaricp</artifactId>
            <version>5.1.0.Final</version>
        </dependency>
        <dependency>
            <!-- Use the Java 8 date/time types with Hibernate -->
            <groupId>org.hibernate</groupId>
            <artifactId>hibernate-java8</artifactId>
            <version>5.1.0.Final</version>
        </dependency>
        <dependency>
            <!-- HyperSQL DB for our persistence layer -->
            <groupId>org.hsqldb</groupId>
            <artifactId>hsqldb</artifactId>
            <version>2.7.1</version>
        </dependency>
        <dependency>
            <!-- SQLite for the database -->
            <groupId>org.xerial</groupId>
            <artifactId>sqlite-jdbc</artifactId>
            <version>3.41.2.2</version>
        </dependency>
        <dependency>
            <!-- Twitter's Bootstrap -->
            <groupId>org.webjars</groupId>
            <artifactId>bootstrap</artifactId>
            <version>${bootstrap.version}</version>
        </dependency>
        <dependency>
            <!-- A simple, javascript based Markdown editor -->
            <groupId>org.webjars.bower</groupId>
            <artifactId>simplemde-markdown-editor</artifactId>
            <version>${simplemde.version}</version>
        </dependency>
        <dependency>
            <!-- BDD style testing framework -->
            <groupId>org.scalatest</groupId>
            <artifactId>scalatest_2.11</artifactId>
            <version>2.2.6</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.seleniumhq.selenium</groupId>
            <artifactId>selenium-java</artifactId>
            <version>${selenium.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.seleniumhq.selenium</groupId>
            <artifactId>selenium-remote-driver</artifactId>
            <version>${selenium.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.seleniumhq.selenium</groupId>
            <artifactId>htmlunit-driver</artifactId>
            <version>2.20</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>com.codeborne</groupId>
            <artifactId>phantomjsdriver</artifactId>
            <version>1.2.1</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <!-- Required by Selenium/PhantomJS -->
            <groupId>xml-apis</groupId>
            <artifactId>xml-apis</artifactId>
            <version>1.4.01</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <!-- TODO Move this to testing only! -->
            <!-- DBUnit, easily reset database to a known state. -->
            <groupId>org.dbunit</groupId>
            <artifactId>dbunit</artifactId>
            <version>2.5.1</version>
        </dependency>
    </dependencies>
</project>
